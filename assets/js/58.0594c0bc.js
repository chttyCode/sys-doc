(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{413:function(t,a,s){"use strict";s.r(a);var n=s(44),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[t._v("#")]),t._v(" 基础")]),t._v(" "),s("h2",{attrs:{id:"一"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一"}},[t._v("#")]),t._v(" 一")]),t._v(" "),s("h2",{attrs:{id:"_01"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_01"}},[t._v("#")]),t._v(" 01")]),t._v(" "),s("h3",{attrs:{id:"java开发环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java开发环境"}},[t._v("#")]),t._v(" java开发环境:")]),t._v(" "),s("p",[t._v("java编译运行过程:-----------常见面试题")]),t._v(" "),s("ol",[s("li",[t._v("编译期:.java源文件，经过编译，生成.class字节码文件")]),t._v(" "),s("li",[t._v("运行期:JVM加载.class并运行.class(0和1)\n"),s("ol",[s("li",[t._v("特点:跨平台、一次编程到处使用")])])])]),t._v(" "),s("p",[t._v("名词解释:--------------------常见面试题")]),t._v(" "),s("ol",[s("li",[t._v("JVM:java虚拟机 加载.class并运行.class")]),t._v(" "),s("li",[t._v("JRE:java运行环境 除了包含JVM以外还包含了运行java程序所必须的环境\t JRE=JVM+java系统类库(小零件)-----小零件API时讲")]),t._v(" "),s("li",[t._v("JDK:java开发工具包 除了包含JRE以外还包含了开发java程序所必须的命令工具\t JDK=JRE+编译、运行等命令工具 说明:\n"),s("ol",[s("li",[t._v("运行java程序的最小环境JRE")]),t._v(" "),s("li",[t._v("开发java程序的最小环境JDK")]),t._v(" "),s("li",[t._v("配置环境变量:----------------------后面用到时再讲")])])])]),t._v(" "),s("h2",{attrs:{id:"_02"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_02"}},[t._v("#")]),t._v(" 02")]),t._v(" "),s("h3",{attrs:{id:"变量-存数的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量-存数的"}},[t._v("#")]),t._v(" 变量:存数的")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("声明:-------相当于在银行开了个帐户 int a; //声明一个整型的变量，名为a int b,c,d; //声明三个整型的变量，名为b,c,d //int a; //编译错误，变量不能同名")])]),t._v(" "),s("li",[s("p",[t._v("初始化:-----相当于往帐户中存钱 int a = 250; //声明整型变量a并赋值为250 int b; //声明整型变量b b = 250; //给变量b赋值为250")])]),t._v(" "),s("li",[s("p",[t._v("使用:-------使用的是帐户里面的钱")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("对变量的操作就是对它所存的那个数的操作")]),t._v(" "),s("div",{staticClass:"language-JAVA extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t \n\n​\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//取出a的值5，加10后，再赋值给变量b\t ")]),t._v("\n\n​\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出变量b的值15\t")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出b，双引号中的原样输出\t ")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//取出a的值5，加10后，再赋值给a\t //在a本身基础之上增10\t \t\t         ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//15 ")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("变量在使用之前必须声明并初始化")]),t._v(" "),s("div",{staticClass:"language-JAVA extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//编译错误，变量m未声明\t ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//编译错误，变量m未初始化 ")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("命名:")]),t._v(" "),s("ol",[s("li",[t._v("只能包含字母、数字、_和$符，不能以数字开头")]),t._v(" "),s("li",[t._v("严格区分大小写")]),t._v(" "),s("li",[t._v("不能使用关键字")]),t._v(" "),s("li",[t._v('允许中文命名，但不建议，建议"英文的见名知意"、"驼峰命名法"')])])])]),t._v(" "),s("h3",{attrs:{id:"八种基本数据类型-byte-short-int-long-float-double-boolean-char"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八种基本数据类型-byte-short-int-long-float-double-boolean-char"}},[t._v("#")]),t._v(" 八种基本数据类型:byte,short,int,long,float,double,boolean,char")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("int:整型，4个字节，-21个多亿到21个多亿")]),t._v(" "),s("ol",[s("li",[t._v("整数直接量默认为int类型，但不能超范围，若超范围则发生编译错误")]),t._v(" "),s("li",[t._v("两个整数相除，结果还是整数，小数位无条件舍弃(不会四舍五入)")]),t._v(" "),s("li",[t._v("整数运算时，若超出范围则发生溢出(溢出不是错误，但是需要避免)")])])]),t._v(" "),s("li",[s("p",[t._v("long:长整型，8个字节，很大很大很大")]),t._v(" "),s("ol",[s("li",[t._v("长整型的直接量需在数字后加L或l")]),t._v(" "),s("li",[t._v("运算时若有可能溢出，建议在第1个数字后加L")])])]),t._v(" "),s("li",[s("p",[t._v("double:浮点型，8个字节，很大很大很大")]),t._v(" "),s("ol",[s("li",[t._v("浮点数直接量默认为double型，若想表示float需在数字后加F或f")]),t._v(" "),s("li",[t._v("double或float型数据参与运算时，有可能会发生舍入误差，精确场合不能使")]),t._v(" "),s("li",[t._v("boolean:布尔型，1个字节")]),t._v(" "),s("li",[t._v("只能取值为true或false")])])]),t._v(" "),s("li",[s("p",[t._v("char:字符型，2个字节")]),t._v(" "),s("ol",[s("li",[t._v("采用Unicode字符集编码格式，一个字符对应一个码， 表现的形式为字符char，但本质上是码int(0到65535)\t(ASCII码: 'a'--97 'A'--65 '0'--48)")]),t._v(" "),s("li",[t._v("字符型直接量必须放在单引号中，并且只能有一个")]),t._v(" "),s("li",[t._v("特殊符号需通过\\来转义")])])]),t._v(" "),s("li",[s("p",[t._v("数据类型间的转换")]),t._v(" "),s("ol",[s("li",[t._v("数据类型从小到大依次为: byte--short--int--long--float--double char--")]),t._v(" "),s("li",[t._v("两种方式:\n"),s("ol",[s("li",[s("p",[t._v("自动/隐式类型转换:小类型到大类型")])]),t._v(" "),s("li",[s("p",[t._v("强制类型转换:大类型到小类型 语法: (要转换成为的数据类型)变量 强转有可能溢出或丢失精度")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("   3. 两点规则:\n   \t1. 整数直接量可以直接赋值给byte,short,char，但不能超出范\n   \t2. byte,short,char型数据参与运算时，系统先将其自动转换为int再运算\n")])])])])])])])])]),t._v(" "),s("h2",{attrs:{id:"_03"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_03"}},[t._v("#")]),t._v(" 03")]),t._v(" "),s("h3",{attrs:{id:"运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符:")]),t._v(" "),s("p",[t._v("算术:+,-,"),s("em",[t._v(",/,%,++,--")])]),t._v(" "),s("p",[t._v("关系:>,<,>=,<=,==,!= boolean*")]),t._v(" "),s("p",[t._v("逻辑:&&,||,! boolean*")]),t._v(" "),s("p",[t._v("赋值:=,+=,-=,*=,/=,%=")]),t._v(" "),s("p",[t._v("字符串连接:+")]),t._v(" "),s("p",[t._v("条件/三目: boolean?数1:数22.分支结构:基于条件执行某语句")]),t._v(" "),s("p",[t._v("if结构: 1条路")]),t._v(" "),s("p",[t._v("if...else结构: 2条路")]),t._v(" "),s("h2",{attrs:{id:"_04"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_04"}},[t._v("#")]),t._v(" 04")]),t._v(" "),s("h3",{attrs:{id:"scanner接收用户输入的数据-背下来-不需要理解-面向对象第5天才能理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scanner接收用户输入的数据-背下来-不需要理解-面向对象第5天才能理解"}},[t._v("#")]),t._v(" Scanner接收用户输入的数据:------背下来，不需要理解(面向对象第5天才能理解)")]),t._v(" "),s("p",[t._v("在package下: import java.util.Scanner;")]),t._v(" "),s("p",[t._v("在main中: Scanner scan = new Scanner(System.in);")]),t._v(" "),s("p",[t._v("在第2步之下:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入年龄:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" scan"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入价格:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" price "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" scan"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextDouble")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"分支结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支结构"}},[t._v("#")]),t._v(" 分支结构:")]),t._v(" "),s("p",[t._v("1)if结构: 1条路")]),t._v(" "),s("p",[t._v("2)if...else结构: 2条路")]),t._v(" "),s("p",[t._v("3)if...else if结构: 多条路")]),t._v(" "),s("p",[t._v("4)switch...case结构: 多条路 优点:效率高、结构清晰 缺点:只能对整数来判断相等 break:跳出switch")]),t._v(" "),s("h3",{attrs:{id:"循环-反复多次执行一段相同或相似的代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环-反复多次执行一段相同或相似的代码"}},[t._v("#")]),t._v(" 循环:反复多次执行一段相同或相似的代码")]),t._v(" "),s("h3",{attrs:{id:"循环三要素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环三要素"}},[t._v("#")]),t._v(" 循环三要素:")]),t._v(" "),s("p",[t._v("1)循环变量的初始化")]),t._v(" "),s("p",[t._v("2)循环的条件(以循环变量为基础)")]),t._v(" "),s("p",[t._v("3)循环变量的改变(向着循环的结束变) 循环变量:在整个循环过程中所反复改变的那个数")]),t._v(" "),s("h3",{attrs:{id:"循环结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环结构"}},[t._v("#")]),t._v(" 循环结构:")]),t._v(" "),s("p",[t._v("1)while结构:先判断后执行，有可能一次都不执行")]),t._v(" "),s("p",[t._v("2)do...while结构:先执行后判断，至少执行一次 要素1与要素3相同时，首选do...while")]),t._v(" "),s("h2",{attrs:{id:"_05"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_05"}},[t._v("#")]),t._v(" 05")]),t._v(" "),s("h3",{attrs:{id:"循环结构-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环结构-2"}},[t._v("#")]),t._v(" 循环结构:")]),t._v(" "),s("p",[t._v("for结构:应用率最高，与次数相关的")]),t._v(" "),s("h3",{attrs:{id:"三种循环结构的选择规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三种循环结构的选择规则"}},[t._v("#")]),t._v(" 三种循环结构的选择规则:")]),t._v(" "),s("p",[t._v("1)先看循环是否与次数相关:")]),t._v(" "),s("p",[t._v("1.1)相关-------------------------------直接上for")]),t._v(" "),s("p",[t._v("1.2)不相关，再看要素1与要素3是否相同:")]),t._v(" "),s("p",[t._v("1.2.1)相同-------------------------直接上do...while")]),t._v(" "),s("p",[t._v("1.2.2)不相同-----------------------直接上while")]),t._v(" "),s("h3",{attrs:{id:"break-跳出循环-continue-跳过循环体中剩余语句而进入下一次循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#break-跳出循环-continue-跳过循环体中剩余语句而进入下一次循环"}},[t._v("#")]),t._v(" break:跳出循环 continue:跳过循环体中剩余语句而进入下一次循环")]),t._v(" "),s("h3",{attrs:{id:"嵌套循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#嵌套循环"}},[t._v("#")]),t._v(" 嵌套循环:")]),t._v(" "),s("p",[t._v("1)循环中套循环，一般多行多列时使用，外层控制行，内层控制列")]),t._v(" "),s("p",[t._v("2)执行规则:外层循环走一次，内层循环走所有次")]),t._v(" "),s("p",[t._v("3)建议:嵌套层数越少越好，能用一层就不用两层，能用两层就不用三层 若业务必须通过三层以上的循环来解决，说明你的设计有问题")]),t._v(" "),s("p",[t._v("4)break只能跳出一层循环")]),t._v(" "),s("h3",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组:")]),t._v(" "),s("p",[t._v("1)是一种数据类型(引用类型)")]),t._v(" "),s("p",[t._v("2)相同数据类型元素的集合")]),t._v(" "),s("p",[t._v("3)定义: int[] arr = new int[10];")]),t._v(" "),s("p",[t._v("4)初始化: 初始化数组中的元素")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0,0,0,0 ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1,4,5,7 ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1,4,5,7 ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//编译错误，此方式只能声明同时初始化 ")]),t._v("\n\narr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//正确 ")]),t._v("\n")])])]),s("h3",{attrs:{id:"访问-访问的是数组中的元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#访问-访问的是数组中的元素"}},[t._v("#")]),t._v(" 访问: 访问的是数组中的元素")]),t._v(" "),s("p",[t._v("通过(数组名.length)可以获取数组的长度(元素的个数) int[] arr = new int[3];\t System.out.println(arr.length); //3")]),t._v(" "),s("p",[t._v("通过下标/索引来访问数组中的元素 下标从0开始，最大到(数组的长度-1)")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t \n\narr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//给arr中的第1个元素赋值为100 ")]),t._v("\n\narr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//给arr中的第2个元素赋值为200\t ")]),t._v("\n\narr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//给arr中的第3个元素赋值为300\t ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//arr[3] = 400; //运行时发生---数组下标越界异常\t \t\t")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出arr中最后一个元素的值 ")]),t._v("\n")])])]),s("p",[t._v("遍历:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//遍历arr数组 arr[i] = 100; ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//给arr中每个元素赋值为100\t")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出每个元素的值")]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_06"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_06"}},[t._v("#")]),t._v(" 06")]),t._v(" "),s("h3",{attrs:{id:"数组-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组-2"}},[t._v("#")]),t._v(" 数组:")]),t._v(" "),s("p",[t._v("数组的复制:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arraycopy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("copyOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("copyOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),s("p",[t._v("8)数组的排序:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对arr进行升序排列")]),t._v("\n")])])]),s("h3",{attrs:{id:"方法-函数、过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-函数、过程"}},[t._v("#")]),t._v(" 方法: 函数、过程")]),t._v(" "),s("p",[t._v("封装一段特定的业务逻辑功能")]),t._v(" "),s("p",[t._v("尽可能独立，只干一件事")]),t._v(" "),s("p",[t._v("可以被反复调用多次")]),t._v(" "),s("p",[t._v("减少代码重复，有利于代码维护")]),t._v(" "),s("h3",{attrs:{id:"方法的定义-五要素-修饰词-返回值类型-方法名-参数列表-方法体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法的定义-五要素-修饰词-返回值类型-方法名-参数列表-方法体"}},[t._v("#")]),t._v(" 方法的定义: 五要素 修饰词 返回值类型 方法名(参数列表){ 方法体 }")]),t._v(" "),s("h3",{attrs:{id:"方法的调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法的调用"}},[t._v("#")]),t._v(" 方法的调用:")]),t._v(" "),s("p",[t._v("无返回值: 方法名(有参传参);")]),t._v(" "),s("p",[t._v("有返回值: 数据类型 变量 = 方法名(有参传参);")]),t._v(" "),s("h3",{attrs:{id:"return"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#return"}},[t._v("#")]),t._v(" return:")]),t._v(" "),s("h2",{attrs:{id:"二"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二"}},[t._v("#")]),t._v(" 二")]),t._v(" "),s("h2",{attrs:{id:"_01-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_01-2"}},[t._v("#")]),t._v(" 01")]),t._v(" "),s("h3",{attrs:{id:"什么是类-什么是对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是类-什么是对象"}},[t._v("#")]),t._v(" 什么是类？什么是对象？")]),t._v(" "),s("p",[t._v("1)现实生活中是由很多很多对象组成的，基于对象抽出了类")]),t._v(" "),s("p",[t._v("2)对象:软件中真实存在的单个个体/东西 类:模板/模子/类型，代表一类个体")]),t._v(" "),s("p",[t._v("3)类是对象的模板，对象是类的具体的实例")]),t._v(" "),s("p",[t._v("4)类中可以包含:")]),t._v(" "),s("ol",[s("li",[t._v("对象所共有的属性/特征-------------成员变量")]),t._v(" "),s("li",[t._v("对象所共有的行为/动作-------------方法")])]),t._v(" "),s("p",[t._v("5)一个类可以创建多个对象2.如何创建类？如何创建对象？如何访问成员？")]),t._v(" "),s("h2",{attrs:{id:"_02-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_02-2"}},[t._v("#")]),t._v(" 02")]),t._v(" "),s("h3",{attrs:{id:"方法的签名-方法名-参数列表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法的签名-方法名-参数列表"}},[t._v("#")]),t._v(" 方法的签名:方法名+参数列表")]),t._v(" "),s("h3",{attrs:{id:"方法的重载-overload-调用起来方便、不需要记住很多的方法名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法的重载-overload-调用起来方便、不需要记住很多的方法名"}},[t._v("#")]),t._v(" 方法的重载(Overload):------调用起来方便、不需要记住很多的方法名")]),t._v(" "),s("ol",[s("li",[t._v("发生在同一类中，方法名相同，参数列表不同，方法体不同")]),t._v(" "),s("li",[t._v("编译器在编译时会根据方法的签名自动绑定调用的方法")])]),t._v(" "),s("h3",{attrs:{id:"构造方法-代码复用-给成员变量赋值的代码复用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造方法-代码复用-给成员变量赋值的代码复用"}},[t._v("#")]),t._v(" 构造方法:------------代码复用(给成员变量赋值的代码复用)")]),t._v(" "),s("ol",[s("li",[t._v("给成员变量赋初值")]),t._v(" "),s("li",[t._v("与类同名、没有返回值类型(连void没有)")]),t._v(" "),s("li",[t._v("在创建(new)对象时被自动调用")]),t._v(" "),s("li",[t._v("若自己不写构造方法，则编译器默认提供一个无参构造方法 若自己写了构造方法，则不再默认提供")]),t._v(" "),s("li",[t._v("构造方法可以重载")])]),t._v(" "),s("h3",{attrs:{id:"this-指代当前对象-哪个对象调用方法它指的就是哪个对象-只能用在方法中-方法中访问成员变量之前默认有个this-this的用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#this-指代当前对象-哪个对象调用方法它指的就是哪个对象-只能用在方法中-方法中访问成员变量之前默认有个this-this的用法"}},[t._v("#")]),t._v(" this:指代当前对象，哪个对象调用方法它指的就是哪个对象 只能用在方法中，方法中访问成员变量之前默认有个this. this的用法:")]),t._v(" "),s("p",[t._v("1)this.成员变量名--------访问成员变量 注意:当成员变量与局部变量同名时，访问成员变量的this不能省略")]),t._v(" "),s("p",[t._v("2)this.方法名()----------调用方法(一般不用)")]),t._v(" "),s("p",[t._v("3)this()-----------------调用构造方法(一般不用)")]),t._v(" "),s("h3",{attrs:{id:"null-表示空-没有指向任何对象-若引用的值为null-则该引用不能进行任何点操作了-若操作则发生nullpointerexception空指针异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#null-表示空-没有指向任何对象-若引用的值为null-则该引用不能进行任何点操作了-若操作则发生nullpointerexception空指针异常"}},[t._v("#")]),t._v(" null:表示空，没有指向任何对象 若引用的值为null，则该引用不能进行任何点操作了 若操作则发生NullPointerException空指针异常")]),t._v(" "),s("h2",{attrs:{id:"_03-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_03-2"}},[t._v("#")]),t._v(" 03")]),t._v(" "),s("h3",{attrs:{id:"引用类型数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用类型数组"}},[t._v("#")]),t._v(" 引用类型数组:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" stus "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nstus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zs"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LF"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ls"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"JMS"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nstus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ww"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SD"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//修改第1个学生的年龄为28")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出第2个学生的名字")]),t._v("\nstus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第3个学生跟大家问好")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("stus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//遍历所有学生")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出每个学生的名字")]),t._v("\n  stus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//每个学生跟大家问好")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[t._v("#")]),t._v(" 继承:")]),t._v(" "),s("p",[t._v("1)作用:代码复用")]),t._v(" "),s("p",[t._v("2)通过extends来实现继承")]),t._v(" "),s("p",[t._v("3)超类:所有派生类所共有的属性和行为 派生类:派生类所特有的属性和行为")]),t._v(" "),s("p",[t._v("4)派生类继承超类后，派生类具有:派生类的+超类的")]),t._v(" "),s("p",[t._v("5)一个超类可以有多个派生类 一个派生类只能有一个超类-------单一继承")]),t._v(" "),s("p",[t._v("6)继承具有传递性")]),t._v(" "),s("p",[t._v("7)java规定:构造派生类之前必须先构造超类 ----在派生类的构造中若没有调用超类构造，则默认super()调用超类无参构造 ----在派生类的构造中若调用了超类构造，则不再默认提供 注意:super()调用超类构造，必须位于派生类构造的第一行")]),t._v(" "),s("h3",{attrs:{id:"super-指代当前对象的超类对象-super的用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#super-指代当前对象的超类对象-super的用法"}},[t._v("#")]),t._v(" super:指代当前对象的超类对象 super的用法:")]),t._v(" "),s("p",[t._v("1)super.成员变量名-----------访问超类的成员变量")]),t._v(" "),s("p",[t._v("2)super.方法名()-------------调用超类的方法-----------明天下午讲")]),t._v(" "),s("p",[t._v("3)super()--------------------调用超类的构造方法")]),t._v(" "),s("h2",{attrs:{id:"_04-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_04-2"}},[t._v("#")]),t._v(" 04")]),t._v(" "),s("h3",{attrs:{id:"向上造型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#向上造型"}},[t._v("#")]),t._v(" 向上造型:")]),t._v(" "),s("p",[t._v("1)超类型的引用指向派生类的对象")]),t._v(" "),s("p",[t._v("2)能点出来什么，看引用的类型---------这是规定，记住就可以了")]),t._v(" "),s("h3",{attrs:{id:"方法的重写-override-重新写、覆盖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法的重写-override-重新写、覆盖"}},[t._v("#")]),t._v(" 方法的重写(Override):重新写、覆盖")]),t._v(" "),s("p",[t._v("1)发生在父子类中，方法名称相同，参数列表相同，方法体不同")]),t._v(" "),s("p",[t._v("2)重写方法被调用时，看对象的类型-----这是规定，记住就可以了")]),t._v(" "),s("p",[t._v('3)重写需遵循"两同两小一大"原则-----了解，一般都是一模一样的')]),t._v(" "),s("p",[t._v("两同:")]),t._v(" "),s("ol",[s("li",[t._v("方法名称相同")]),t._v(" "),s("li",[t._v("参数列表相同")])]),t._v(" "),s("p",[t._v("两小:")]),t._v(" "),s("ol",[s("li",[t._v("派生类方法的返回值类型小于或等于超类方法的\n"),s("ol",[s("li",[t._v("void时，必须相同")]),t._v(" "),s("li",[t._v("基本类型时，必须相同")]),t._v(" "),s("li",[t._v("引用类型时，小于或等于")]),t._v(" "),s("li",[t._v("派生类方法抛出的异常小于或等于超类方法的-------API异常时讲")])])])]),t._v(" "),s("p",[t._v("一大:")]),t._v(" "),s("ol",[s("li",[t._v("派生类方法的访问权限大于或等于超类方法的-------明天讲")])]),t._v(" "),s("h3",{attrs:{id:"重写与重载的区别-常见面试题-回答时只需回答1-1和2-1即可"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重写与重载的区别-常见面试题-回答时只需回答1-1和2-1即可"}},[t._v("#")]),t._v(" 重写与重载的区别:------常见面试题(回答时只需回答1.1和2.1即可)")]),t._v(" "),s("p",[t._v("1)重写(Override):")]),t._v(" "),s("p",[t._v("1.1)发生在父子类中，方法名称相同，参数列表相同，方法体不同")]),t._v(" "),s("p",[t._v('1.2)遵循"运行期绑定"，看对象的类型来调用方法')]),t._v(" "),s("p",[t._v("2)重载(Overload):")]),t._v(" "),s("p",[t._v("2.1)发生在同一类中，方法名称相同，参数列表不同，方法体不同")]),t._v(" "),s("p",[t._v('2.2)遵循"编译期绑定"，看参数/引用的类型来绑定调用方法')]),t._v(" "),s("h2",{attrs:{id:"_05-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_05-2"}},[t._v("#")]),t._v(" 05")]),t._v(" "),s("h3",{attrs:{id:"package"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#package"}},[t._v("#")]),t._v(" package:")]),t._v(" "),s("p",[t._v("1)作用:避免类的命名冲突")]),t._v(" "),s("p",[t._v("2)同包中的类不能同名，类的全称:包名.类名")]),t._v(" "),s("p",[t._v("3)包名可以有层次结构")]),t._v(" "),s("p",[t._v("4)建议:包名所有字母都小写")]),t._v(" "),s("h3",{attrs:{id:"import"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#import"}},[t._v("#")]),t._v(" import:")]),t._v(" "),s("p",[t._v("1)同包中的类可以直接访问 不同包中的类不能直接访问，若想访问有如下两种方式:")]),t._v(" "),s("p",[t._v("1.1)先import声明类再访问类-----建议")]),t._v(" "),s("p",[t._v("1.2)类的全称-------------------太繁琐，不建议")]),t._v(" "),s("h3",{attrs:{id:"访问控制修饰符-保护数据的安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#访问控制修饰符-保护数据的安全"}},[t._v("#")]),t._v(" 访问控制修饰符:-----------保护数据的安全")]),t._v(" "),s("p",[t._v("1)public:公开的，任何类")]),t._v(" "),s("p",[t._v("2)private:私有的，本类")]),t._v(" "),s("p",[t._v("3)protected:受保护的，本类、派生类、同包类")]),t._v(" "),s("p",[t._v("4)默认的:什么也不写，本类、同包类 说明:")]),t._v(" "),s("ol",[s("li",[t._v("类的访问权限只能是public或默认的")]),t._v(" "),s("li",[t._v("类中成员的访问权限如上4种都可以")])]),t._v(" "),s("h3",{attrs:{id:"final-最终的、不可改变的-单独应用几率低-了解即可"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#final-最终的、不可改变的-单独应用几率低-了解即可"}},[t._v("#")]),t._v(" final:最终的、不可改变的------单独应用几率低，了解即可")]),t._v(" "),s("p",[t._v("1)修饰变量:变量不能被改变")]),t._v(" "),s("p",[t._v("2)修饰方法:方法不能被重写")]),t._v(" "),s("p",[t._v("3)修饰类:类不能被继承")]),t._v(" "),s("h3",{attrs:{id:"static-静态的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#static-静态的"}},[t._v("#")]),t._v(" static:静态的")]),t._v(" "),s("p",[t._v("1)静态变量:")]),t._v(" "),s("p",[t._v("1.1)由static修饰")]),t._v(" "),s("p",[t._v("1.2)属于类，存储在方法区中，只有一份")]),t._v(" "),s("p",[t._v("1.3)常常通过类名点来访问")]),t._v(" "),s("p",[t._v("1.4)何时用:所有对象所共享的数据(图片、音频、视频等)")]),t._v(" "),s("p",[t._v("2)静态方法:")]),t._v(" "),s("p",[t._v("2.1)由static修饰")]),t._v(" "),s("p",[t._v("2.2)属于类，存储在方法区中，只有一份")]),t._v(" "),s("p",[t._v("2.3)常常通过类名点来访问")]),t._v(" "),s("p",[t._v("2.4)静态方法中没有隐式this传递， 所以静态方法中不能直接访问实例成员")]),t._v(" "),s("p",[t._v("2.5)何时用:方法的操作与对象无关")]),t._v(" "),s("p",[t._v("3)静态块:")]),t._v(" "),s("p",[t._v("3.1)由static修饰")]),t._v(" "),s("p",[t._v("3.2)属于类的，在类被加载期间自动执行， 一个类只被加载一次，所以静态块也只执行一次")]),t._v(" "),s("p",[t._v("3.3)何时用:初始化/加载静态资源(图片、音频、视频等)")]),t._v(" "),s("h2",{attrs:{id:"_06-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_06-2"}},[t._v("#")]),t._v(" 06")]),t._v(" "),s("h3",{attrs:{id:"static-final常量-应用率高"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#static-final常量-应用率高"}},[t._v("#")]),t._v(" static final常量:应用率高")]),t._v(" "),s("p",[t._v("1)必须声明同时初始化")]),t._v(" "),s("p",[t._v("2)由类名点来访问，不能被改变")]),t._v(" "),s("p",[t._v("3)建议:常量名建议所有字母都大写，多个单词用_分隔")]),t._v(" "),s("p",[t._v("4)编译器在编译时将常量直接替换为具体的值，效率高")]),t._v(" "),s("p",[t._v("5)何时用:数据永远不变，并且经常使用")]),t._v(" "),s("h3",{attrs:{id:"抽象方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#抽象方法"}},[t._v("#")]),t._v(" 抽象方法:")]),t._v(" "),s("p",[t._v("1)由abstract修饰")]),t._v(" "),s("p",[t._v("2)只有方法的定义，没有具体的实现(连{}都没有)")]),t._v(" "),s("h3",{attrs:{id:"抽象类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#抽象类"}},[t._v("#")]),t._v(" 抽象类:")]),t._v(" "),s("p",[t._v("1)由abstract修饰")]),t._v(" "),s("p",[t._v("2)包含抽象方法的类必须是抽象类")]),t._v(" "),s("p",[t._v("3)抽象类不能被实例化")]),t._v(" "),s("p",[t._v("4)抽象类是需要被继承的，派生类:")]),t._v(" "),s("ol",[s("li",[t._v("重写所有抽象方法---------变不完整为完整")]),t._v(" "),s("li",[t._v("也声明为抽象类-----------不常用")])]),t._v(" "),s("p",[t._v("5)抽象类的意义:")]),t._v(" "),s("ol",[s("li",[t._v("封装派生类共有的属性和行为--------代码复用")]),t._v(" "),s("li",[t._v("为所有派生类提供统一的类型--------向上造型")]),t._v(" "),s("li",[t._v("可以包含抽象方法，为所有派生类提供统一的入口(造型之后能点出来) 派生类的具体实现不同，但入口是一致的")])]),t._v(" "),s("h2",{attrs:{id:"_07"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_07"}},[t._v("#")]),t._v(" 07")]),t._v(" "),s("h3",{attrs:{id:"成员内部类-应用率低-了解即可"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#成员内部类-应用率低-了解即可"}},[t._v("#")]),t._v(" 成员内部类:------应用率低，了解即可")]),t._v(" "),s("p",[t._v("1)类中套类，外面的称为外部类，里面的称为内部类")]),t._v(" "),s("p",[t._v("2)内部类通常只服务于外部类，对外不具备可见性")]),t._v(" "),s("p",[t._v("3)内部类对象通常是在外部类中创建的")]),t._v(" "),s("p",[t._v("4)内部类中可以直接访问外部类的成员(包括私有的) 内部类中有个隐式的引用指向了创建它的外部类对象 外部类名.this")]),t._v(" "),s("h3",{attrs:{id:"匿名内部类-优点-简化代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#匿名内部类-优点-简化代码"}},[t._v("#")]),t._v(" 匿名内部类:-------------优点:简化代码")]),t._v(" "),s("p",[t._v("1)若想创建一个类(派生类)的对象，并且对象只创建一次， 此时该类不必命名，称为匿名内部类")]),t._v(" "),s("p",[t._v("2)匿名内部类中不能修改外面的变量的值，因为该变量一定是final的")]),t._v(" "),s("p",[t._v("常见面试题:问:内部类有独立的.class吗?答:有")]),t._v(" "),s("h2",{attrs:{id:"_08"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_08"}},[t._v("#")]),t._v(" 08")]),t._v(" "),s("h3",{attrs:{id:"接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口"}},[t._v("#")]),t._v(" 接口:")]),t._v(" "),s("p",[t._v("1)是一种数据类型(引用类型)")]),t._v(" "),s("p",[t._v("2)由interface定义")]),t._v(" "),s("p",[t._v("3)只能包含常量和抽象方法")]),t._v(" "),s("p",[t._v("4)接口不能被实例化")]),t._v(" "),s("p",[t._v("5)接口是需要被实现/继承的，实现/派生类: 必须重写接口中的所有抽象方法")]),t._v(" "),s("p",[t._v("6)一个类可以实现多个接口，用逗号分隔 若又继承又实现时，应先继承后实现")]),t._v(" "),s("p",[t._v("7)接口可以继承接口")]),t._v(" "),s("p",[t._v("设计规则:")]),t._v(" "),s("p",[t._v("1)将所有派生类所共有的属性和行为，抽到超类中----------抽共性")]),t._v(" "),s("p",[t._v("2)派生类的行为都一样，设计为普通方法 派生类的行为都不一样，设计为抽象方法")]),t._v(" "),s("p",[t._v("3)将部分派生类所共有的属性和行为，抽到接口中 接口是对继承的单根性的扩展----------实现多继承")]),t._v(" "),s("h2",{attrs:{id:"_09"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_09"}},[t._v("#")]),t._v(" 09")]),t._v(" "),s("h3",{attrs:{id:"多态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多态"}},[t._v("#")]),t._v(" 多态:")]),t._v(" "),s("p",[t._v("1)意义:")]),t._v(" "),s("p",[t._v("1.1)同一类型的引用，指向不同的对象时，有不同的实现 ----行为的多态:cut(),step(),getImage()...")]),t._v(" "),s("p",[t._v("1.2)同一个对象，被造型为不同的类型时，有不同的功能 ----对象的多态:我,你,水..")]),t._v(" "),s("p",[t._v("2)向上造型/自动类型转换:")]),t._v(" "),s("p",[t._v("2.1)超类型的引用指向派生类的对象")]),t._v(" "),s("p",[t._v("2.2)能造型成为的数据类型有: 超类+所实现的接口")]),t._v(" "),s("p",[t._v("2.3)能点出来什么，看引用的类型")]),t._v(" "),s("p",[t._v("3)强制类型转换，成功的条件只有如下两种:")]),t._v(" "),s("p",[t._v("3.1)引用所指向的对象，就是该类型")]),t._v(" "),s("p",[t._v("3.2)引用所指向的对象，实现了该接口或继承了该类")]),t._v(" "),s("p",[t._v("4)强转时若不符合如上条件，则发生ClassCastException类型转换异常 建议:强转之前先通过instanceof来判断引用的对象是否是该类型")]),t._v(" "),s("h2",{attrs:{id:"_10"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10"}},[t._v("#")]),t._v(" 10")]),t._v(" "),s("h3",{attrs:{id:"内存管理-由jvm来管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存管理-由jvm来管理"}},[t._v("#")]),t._v(" 内存管理:由JVM来管理")]),t._v(" "),s("p",[t._v("1)堆:")]),t._v(" "),s("p",[t._v("1.1)存储new出来的对象(包括实例变量)")]),t._v(" "),s("p",[t._v("1.2)垃圾:没有任何引用所指向的对象 垃圾回收器(GC)不定时到内存中清扫垃圾，\t回收过程是透明的(看不到的)，不一定一发现垃圾就立刻回收，\t通过调用System.gc()建议虚拟机尽快调度GC来回收垃圾")]),t._v(" "),s("p",[t._v("1.3)内存泄漏:不再使用的内存还没有被及时的回收，严重的会导致系统的崩溃 建议:不再使用的内存应及时将引用设置为null")]),t._v(" "),s("p",[t._v("1.4)实例变量的生命周期: 创建对象时存储在堆中，对象被回收时一并被回收")]),t._v(" "),s("p",[t._v("2)栈:")]),t._v(" "),s("p",[t._v("2.1)存储正在调用方法中的所有局部变量(包括方法的参数)")]),t._v(" "),s("p",[t._v("2.2)调用方法时，会在栈中为该方法分配一块对应的栈帧， 栈帧中存储方法中的局部变量(包括方法的参数)，\t方法调用结束时，栈帧自动被清除，局部变量一并被清除")]),t._v(" "),s("p",[t._v("2.3)局部变量的生命周期: 调用方法时存储在栈中，方法调用结束时与栈帧一并被清除")]),t._v(" "),s("p",[t._v("3)方法区:")]),t._v(" "),s("p",[t._v("3.1)存储.class字节码文件(包括静态变量、方法)")]),t._v(" "),s("p",[t._v("3.2)方法只有一份，通过this来区分具体的调用对象")]),t._v(" "),s("h3",{attrs:{id:"面向对象三大特征-常见面试题-你对面向对象的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面向对象三大特征-常见面试题-你对面向对象的理解"}},[t._v("#")]),t._v(" 面向对象三大特征:----------常见面试题(你对面向对象的理解)")]),t._v(" "),s("p",[t._v("1.封装:")]),t._v(" "),s("p",[t._v("1)类:封装的是对象的属性和行为")]),t._v(" "),s("p",[t._v("2)方法:封装的是具体的业务逻辑功能实现")]),t._v(" "),s("p",[t._v("3)访问控制修饰符:封装的是具体的访问权限")]),t._v(" "),s("p",[t._v("2.继承:")]),t._v(" "),s("p",[t._v("1)作用:代码复用")]),t._v(" "),s("p",[t._v("2)超类:所有派生类所共有的属性和行为 接口:部分派生类所共有的属性和行为 派生类:派生类所特有的属性和行为")]),t._v(" "),s("p",[t._v("3)单一继承、多接口实现，具有传递性")]),t._v(" "),s("p",[t._v("3.多态:")]),t._v(" "),s("p",[t._v("1)行为的多态:所有抽象方法都是多态的 对象的多态:所有对象都是多态的")]),t._v(" "),s("p",[t._v("2)向上造型、强制类型转换、instanceof")]),t._v(" "),s("p",[t._v("3)多态的表现形式:")]),t._v(" "),s("p",[t._v("3.1)行为多态，通过方法的重写来表现的")]),t._v(" "),s("p",[t._v("3.2)对象多态，通过向上造型来表现的")])])}),[],!1,null,null,null);a.default=r.exports}}]);