(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{397:function(t,a,s){"use strict";s.r(a);var r=s(44),v=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[t._v("#")]),t._v(" 安全")]),t._v(" "),s("p",[t._v("浏览器安全可以分为三大块——Web 页面安全、浏览器网络安全和浏览器系统安全")]),t._v(" "),s("h2",{attrs:{id:"页面安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#页面安全"}},[t._v("#")]),t._v(" 页面安全")]),t._v(" "),s("p",[t._v("Web 世界会是开放的，但我们需要隐私保护")]),t._v(" "),s("h3",{attrs:{id:"同源策略-same-origin-policy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同源策略-same-origin-policy"}},[t._v("#")]),t._v(" 同源策略（Same-origin policy）")]),t._v(" "),s("p",[t._v("如果两个 URL 的协议、域名和端口都相同，我们就称这两个 URL 同源")]),t._v(" "),s("p",[t._v("同源策略主要表现在 DOM、Web 数据和网络这三个层面。")]),t._v(" "),s("h4",{attrs:{id:"dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[t._v("#")]),t._v(" DOM")]),t._v(" "),s("p",[t._v("同源策略限制了来自不同源的 JavaScript 脚本对当前 DOM 对象读和写的操作。")]),t._v(" "),s("h4",{attrs:{id:"数据层"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据层"}},[t._v("#")]),t._v(" 数据层")]),t._v(" "),s("p",[t._v("同源策略限制了不同源的站点读取当前站点的 Cookie、IndexDB、LocalStorage 等数据")]),t._v(" "),s("h4",{attrs:{id:"网络"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络"}},[t._v("#")]),t._v(" 网络")]),t._v(" "),s("p",[t._v("同源策略限制了通过 XMLHttpRequest 等方式将站点的数据发送给不同源的站点")]),t._v(" "),s("h3",{attrs:{id:"安全和便利性的权衡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全和便利性的权衡"}},[t._v("#")]),t._v(" 安全和便利性的权衡")]),t._v(" "),s("p",[t._v("隔绝是安全的，但是开发又是必须的，业务中肯定会有跨站点访问的场景，浏览器安全策略中提供的平衡技术")]),t._v(" "),s("h4",{attrs:{id:"第一步资源放开"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一步资源放开"}},[t._v("#")]),t._v(" 第一步资源放开")]),t._v(" "),s("p",[t._v("同源策略要求页面所有资源都来自一个源，第一个平衡就是允许页面嵌入第三方资源")]),t._v(" "),s("p",[t._v("带来的挑战是页面被劫持注入第三方脚本，即 xss 攻击")]),t._v(" "),s("p",[t._v("浏览器的弥补策略是内容安全策略，即 CSP,其核心思想是让服务器决定浏览器能够加载哪些资源，让服务器决定浏览器是否能够执行内联 JavaScript 代码")]),t._v(" "),s("h5",{attrs:{id:"内容安全策略-csp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内容安全策略-csp"}},[t._v("#")]),t._v(" 内容安全策略( CSP )")]),t._v(" "),s("p",[t._v("主要目标是减少和报告 XSS 攻击")]),t._v(" "),s("p",[t._v("你需要配置你的网络服务器返回 Content-Security-Policy HTTP 头部，除此之外, ")]),s("meta"),t._v(" 元素也可以被用来配置该策略"),s("p"),t._v(" "),s("h4",{attrs:{id:"跨域资源共享和跨文档消息机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨域资源共享和跨文档消息机制"}},[t._v("#")]),t._v(" 跨域资源共享和跨文档消息机制")]),t._v(" "),s("p",[t._v("不同站点无法进行跨站请求、无法操作 DOM，浏览器的平衡操作是提供跨域资源共享（CORS）、跨文档消息机制")]),t._v(" "),s("h5",{attrs:{id:"跨源资源共享-cors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨源资源共享-cors"}},[t._v("#")]),t._v(" 跨源资源共享（CORS）")])])}),[],!1,null,null,null);a.default=v.exports}}]);