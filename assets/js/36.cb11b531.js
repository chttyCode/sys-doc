(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{394:function(l,t,i){"use strict";i.r(t);var v=i(44),_=Object(v.a)({},(function(){var l=this,t=l.$createElement,i=l._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[i("h1",{attrs:{id:"循环系统"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#循环系统"}},[l._v("#")]),l._v(" 循环系统")]),l._v(" "),i("ul",[i("li",[l._v("页面循环系统\n"),i("ul",[i("li",[l._v("渲染进程的主线程如何执行不同的任务\n"),i("ul",[i("li",[l._v("主线程只能执行顺序执行预定的逻辑，无法处理外来或者自身在执行过程中产生的任务")])])]),l._v(" "),i("li",[l._v("事件+循环\n"),i("ul",[i("li",[l._v("循环\n"),i("ul",[i("li",[l._v("在主线程最后进行轮询")])])]),l._v(" "),i("li",[l._v("事件\n"),i("ul",[i("li",[l._v("监听事件，激活循环")])])])])]),l._v(" "),i("li",[l._v("队列\n"),i("ul",[i("li",[l._v("事件+循环只能执行自身执行过程中产生的任务，外来任务")])])])])]),l._v(" "),i("li",[l._v("setTimeout")]),l._v(" "),i("li",[l._v("XMLRequest")]),l._v(" "),i("li",[l._v("微任务与宏任务")]),l._v(" "),i("li",[l._v("promise")]),l._v(" "),i("li",[l._v("async/await")])])])}),[],!1,null,null,null);t.default=_.exports}}]);