(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{392:function(v,_,l){"use strict";l.r(_);var i=l(44),n=Object(i.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h1",{attrs:{id:"宏观视角下的浏览器"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#宏观视角下的浏览器"}},[v._v("#")]),v._v(" 宏观视角下的浏览器")]),v._v(" "),l("h2",{attrs:{id:"chrome-架构"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#chrome-架构"}},[v._v("#")]),v._v(" chrome 架构")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("优化 web 性能需要了解浏览器的网络请求、页面渲染、js 执行以及 web 安全，学习浏览器架构可以将这些知识串联起来，以点串线成网")])]),v._v(" "),l("li",[l("p",[v._v("浏览器架构的基础知识")]),v._v(" "),l("ul",[l("li",[v._v("线程 vs 进程\n"),l("ul",[l("li",[v._v("进程是软件运行的实例，是系统分配内存的最小单位，负责向系统申请存放运行时代码、保存运行变量的内存空间")]),v._v(" "),l("li",[v._v("线程依赖进程，不能单独存在")]),v._v(" "),l("li",[v._v("特点\n"),l("ul",[l("li",[v._v("进程中任一线程执行出错，都会导致整个进程的崩溃")]),v._v(" "),l("li",[v._v("线程之间共享进程中的数据")]),v._v(" "),l("li",[v._v("进程关闭后系统会回收进程所占内存")]),v._v(" "),l("li",[v._v("进程之间的内容相互隔离")])])])])]),v._v(" "),l("li",[v._v("并发\n"),l("ul",[l("li",[v._v("采用多线程同时执行")])])])])]),v._v(" "),l("li",[l("p",[v._v("浏览器的演进")]),v._v(" "),l("ul",[l("li",[v._v("单进程\n"),l("ul",[l("li",[v._v("早期浏览器多线程运行在单一浏览器进程，包括插件线程、网络线程、渲染线程(处理 js 执行、html、css 渲染)")]),v._v(" "),l("li",[v._v("问题：\n"),l("ul",[l("li",[v._v("不稳定\n"),l("ul",[l("li",[v._v("某一线程崩溃会引起浏览器进程崩溃")])])]),v._v(" "),l("li",[v._v("不流畅\n"),l("ul",[l("li",[v._v("js 长任务执行会引起页面卡顿")])])]),v._v(" "),l("li",[v._v("不安全\n"),l("ul",[l("li",[v._v("浏览器能够获取系统资源、插件脚本也能够获取系统资源")])])])])])])]),v._v(" "),l("li",[v._v("多进程\n"),l("ul",[l("li",[v._v("插件进程、渲染进程、浏览器进程\n"),l("ul",[l("li",[v._v("浏览器主进程：负责页面呈现、IPC 通信管理(主要负责界面显示、用户交互、子进程管理，同时提供存储等功能。)")]),v._v(" "),l("li",[v._v("渲染进程：浏览器会为每一个 tab 创建一个新的渲染进程，负责 js 执行、页面渲染")]),v._v(" "),l("li",[v._v("插件进程：负责插件运行")]),v._v(" "),l("li",[v._v("GPU 进程：最初的目的是进行 3D 渲染，随后的页面、chromeUI 都采用 GPU")])])]),v._v(" "),l("li",[v._v("解决了\n"),l("ul",[l("li",[v._v("进程相互隔离，页面或插件崩溃不会影响浏览器主进程")]),v._v(" "),l("li",[v._v("多进程可以采用沙箱隔离的方式，避免安全问题")]),v._v(" "),l("li",[v._v("每个页面创建一个渲染进程，解决了不流畅的问题")])])]),v._v(" "),l("li",[v._v("问题\n"),l("ul",[l("li",[v._v("多进程带了庞大的资源开销")]),v._v(" "),l("li",[v._v("架构更加复杂")])])])])]),v._v(" "),l("li",[v._v("面向服务架构\n"),l("ul",[l("li",[v._v("采用面向服务架构的思想、将以服务的方式重构以前的模块\n"),l("ul",[l("li",[v._v("插件进程")]),v._v(" "),l("li",[v._v("渲染进程")]),v._v(" "),l("li",[v._v("基础服务进程\n"),l("ul",[l("li",[v._v("网络进程")]),v._v(" "),l("li",[v._v("GPU 进程")]),v._v(" "),l("li",[v._v("UI 进程")])])])])]),v._v(" "),l("li",[v._v("在低内存的设备上会合并基础服务到浏览器进程，降低内存开销")])])])])])]),v._v(" "),l("h2",{attrs:{id:"tcp-协议"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#tcp-协议"}},[v._v("#")]),v._v(" TCP 协议")]),v._v(" "),l("ul",[l("li",[v._v("网络加载对 Web 性能的影响是其中最重要的因素，如果优化网络加载，就需要对网络知识有充分的了解，熟悉网络可以提升优化性能、解决问题的能力")]),v._v(" "),l("li",[v._v("数据信息在网络中是以包的形式传送的")]),v._v(" "),l("li",[v._v("一个数据包在网络中如何传递的，就需要有一定的规则\n"),l("ul",[l("li",[v._v("IP 协议： 规则负责将数据包送达指定的主机")]),v._v(" "),l("li",[v._v("UDP 协议：用户数据包协议负责将数据送达目的主机的特定程序")]),v._v(" "),l("li",[v._v("网络传输分层\n"),l("ul",[l("li",[v._v("应用层\n"),l("ul",[l("li",[v._v("程序应用实例，每一个程序都会监听一个端口")])])]),v._v(" "),l("li",[v._v("传输层\n"),l("ul",[l("li",[v._v("给数据包添加目的主机的应用端口号")])])]),v._v(" "),l("li",[v._v("网络层\n"),l("ul",[l("li",[v._v("在数据包上附加 IP 信息，ip 负责路由寻址，将数据包送达指定 ip 主机")])])]),v._v(" "),l("li",[v._v("数据链路层\n"),l("ul",[l("li",[v._v("通过物理连接传输数据包")])])])])]),v._v(" "),l("li",[v._v("存在的问题\n"),l("ul",[l("li",[v._v("一个完整的数据会被拆分成 n 个数据包进行传输，传输的过程中，数据包可能会通过不同的路由进行传输，那样数据包送达的时间、数量无法得到保障、无法确认数据的完整性")])])]),v._v(" "),l("li",[v._v("满足不了对数据完整性要求比较高的业务\n"),l("ul",[l("li",[v._v("TCP 协议\n"),l("ul",[l("li",[v._v("生命周期\n"),l("ul",[l("li",[v._v("建立连接\n"),l("ul",[l("li",[v._v("客户端会发送请求通信")]),v._v(" "),l("li",[v._v("服务端会回复确认信息 ACK 和请求通信")]),v._v(" "),l("li",[v._v("客户端收到后会回复服务端 ACK")])])]),v._v(" "),l("li",[v._v("传输数据\n"),l("ul",[l("li",[v._v("该阶段接受方需要对每个数据包进行确认、对接收到的数据包根据 TCP 头中的序号进行排序")])])]),v._v(" "),l("li",[v._v("断开连接\n"),l("ul",[l("li",[v._v("客户端发送断开请求")]),v._v(" "),l("li",[v._v("服务端发送 ACK,即客户端可以断开请求，此时服务端可能还存在要传输的信息，即无法发送断开请求")]),v._v(" "),l("li",[v._v("服务端在发送完数据后，发送断开请求")]),v._v(" "),l("li",[v._v("客户端接收到请求，发送 ACK,即断开连接")])])])])]),v._v(" "),l("li",[v._v("解决 UDP 存在的问题\n"),l("ul",[l("li",[v._v("对数据丢包，提供了重传机制\n"),l("ul",[l("li",[v._v("传输过程中，接收方在接到数据包后需发送确认信息，如果发送方在规定时间内没有收到接受方的确认信息，则视为丢包会触发重传机制")])])]),v._v(" "),l("li",[v._v("对数据完整性，引入数据包排序机制\n"),l("ul",[l("li",[v._v("TCP 协议在传输层除了提供端口号、还提供了用于排序的序号")])])])])])])])])])])])]),v._v(" "),l("h2",{attrs:{id:"http-请求"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#http-请求"}},[v._v("#")]),v._v(" http 请求")]),v._v(" "),l("ul",[l("li",[v._v("http 是基于 tcp 的应用层协议，主要用于客户端于服务器的通信，如果说 tcp 是保证了一个数据包端到端的传输，那么 http 就是负责页面级的传输，超文本传输控制协议")]),v._v(" "),l("li",[v._v("导航流程\n"),l("ul",[l("li",[v._v("输入 URL")]),v._v(" "),l("li",[v._v("构建请求\n"),l("ul",[l("li",[v._v("根据 http 协议构建请求起始行")]),v._v(" "),l("li",[v._v("构建请求头")]),v._v(" "),l("li",[v._v("构建请求体")])])]),v._v(" "),l("li",[v._v("tcp 协议附加 Ip&应用端口号\n"),l("ul",[l("li",[v._v("查询 DNS,查询本机缓存，获取对应的 IP")]),v._v(" "),l("li",[v._v("端口号\n"),l("ul",[l("li",[v._v("http 默认 80")]),v._v(" "),l("li",[v._v("https 默认 445")])])])])]),v._v(" "),l("li",[v._v("建立连接\n"),l("ul",[l("li",[v._v("chrome 对同一域名的请求有限制，如果当前请求数大于 6，则进入排队等待")]),v._v(" "),l("li",[v._v("通过三次握手建立连接")])])]),v._v(" "),l("li",[v._v("客户端发送请求信息\n"),l("ul",[l("li",[v._v("判断是否有缓存可用，如果缓存有效则拦截请求直接返回缓存信息")])])]),v._v(" "),l("li",[v._v("服务端发送信息")]),v._v(" "),l("li",[v._v("客户端接收信息\n"),l("ul",[l("li",[v._v("请求如果是 302,即临时重定向，会根据响应头的 LOCATION 字段重定向")])])]),v._v(" "),l("li",[v._v("断开连接\n"),l("ul",[l("li",[v._v("如果请求开启 keep-alive，即长连接，会雇佣 TCP 连接")]),v._v(" "),l("li",[v._v("四次挥手断开连接")])])])])]),v._v(" "),l("li",[v._v("http 为无状态连接\n"),l("ul",[l("li",[v._v("服务端在响应头中设置 cookie")]),v._v(" "),l("li",[v._v("客户端再下一次请求同域名时会带上 cookie")]),v._v(" "),l("li",[v._v("服务端校验所携带的 cookie 是否为已登录")])])]),v._v(" "),l("li",[v._v("为什么第二次打开相同页面会变快\n"),l("ul",[l("li",[v._v("第一次访问后会有 DNS 域名缓存")]),v._v(" "),l("li",[v._v("第一次访问后会有静态资源缓存")])])])]),v._v(" "),l("h2",{attrs:{id:"导航流程"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#导航流程"}},[v._v("#")]),v._v(" 导航流程")]),v._v(" "),l("ul",[l("li",[v._v('导航流程要从一个面试题说起，"从输入一个 URL"到页面展示，这中间发生了什么\n'),l("ul",[l("li",[v._v("首先需要熟悉浏览器的架构，各个进程的职责\n"),l("ul",[l("li",[v._v("浏览器进程\n"),l("ul",[l("li",[v._v("负责用户行为交互、进程管理")])])]),v._v(" "),l("li",[v._v("网络进程\n"),l("ul",[l("li",[v._v("负责网络资源加载")])])]),v._v(" "),l("li",[v._v("渲染进程\n"),l("ul",[l("li",[v._v("负责网络资源解析")])])])])]),v._v(" "),l("li",[v._v("输入 URL\n"),l("ul",[l("li",[v._v("浏览器进程根据输入内容，判断是内容搜索还是完整链接跳转，将 URL 转发到网络进程，在网络进程发起真正请求\n"),l("ul",[l("li",[v._v("内容:直接带内容收拾")]),v._v(" "),l("li",[v._v("导航:拼接完整导航链接")])])]),v._v(" "),l("li",[v._v("网络进程\n"),l("ul",[l("li",[v._v("查找缓存\n"),l("ul",[l("li",[v._v("缓存有效、直接将缓存内容返回给浏览器进程")])])]),v._v(" "),l("li",[v._v("根据 url 查找 DNS，查找对应的 IP 地址")]),v._v(" "),l("li",[v._v("根据 http/https 协议，构建请求信息")]),v._v(" "),l("li",[v._v("如果是 https，建立 TLS 链接")]),v._v(" "),l("li",[v._v("建立 TC 链接，附加端口号")]),v._v(" "),l("li",[v._v("通过网络层，附加 IP 信息，负责路由寻址")]),v._v(" "),l("li",[v._v("接收到响应头数据、解析响应头，并将数据转发浏览器进程\n"),l("ul",[l("li",[v._v("头部信息 301 或 302,则根据 Location 值，重新发起请求")]),v._v(" "),l("li",[v._v("否则根据 content-type 类型值，处理响应")])])])])]),v._v(" "),l("li",[v._v("浏览器进程\n"),l("ul",[l("li",[v._v("接收到网络进程的响应头消息，发送'提交文档'到渲染进程")])])]),v._v(" "),l("li",[v._v("渲染进程\n"),l("ul",[l("li",[v._v("渲染进程准备\n"),l("ul",[l("li",[v._v("同一站点会复用父页面的渲染进程\n"),l("ul",[l("li",[v._v("根域名、协议包含了该根域名下的所有子域名和不同的端口")])])])])]),v._v(" "),l("li",[v._v("接收到浏览器进程'提交文档'的消息后，建立与网络进程的通信管道")]),v._v(" "),l("li",[v._v("接收完成后，向浏览器进程返回'确认提交'消息")])])]),v._v(" "),l("li",[v._v("浏览器进\n"),l("ul",[l("li",[v._v("接收到渲染进程的'确认提交'消息后，会更新浏览器界面状态，包括了安全状态、地址栏的 URL、前进后退的历史状态，并更新 Web 页面")])])])])])])])]),v._v(" "),l("h2",{attrs:{id:"渲染流程"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#渲染流程"}},[v._v("#")]),v._v(" 渲染流程")]),v._v(" "),l("ul",[l("li",[v._v("导航阶段当渲染进程接受完数据时会想浏览器进程返回'确认提交'信息，浏览器会更新界面，删除就文档，同时渲染进程正在执行渲染流程")]),v._v(" "),l("li",[v._v("渲染流程是怎样的呢\n"),l("blockquote",[l("p",[v._v("渲染是分阶段进行的")])]),v._v(" "),l("ul",[l("li",[v._v("构建 DOM 树\n"),l("ul",[l("li",[v._v("输入：html 标签")]),v._v(" "),l("li",[v._v("过程：将 html 语义标签转为浏览器能够理解的 DOM 结构")]),v._v(" "),l("li",[v._v("输出：DOM 树")])])]),v._v(" "),l("li",[v._v("样式计算\n"),l("ul",[l("li",[v._v("输入：css 样式文件")]),v._v(" "),l("li",[v._v("过程：\n"),l("ul",[l("li",[v._v("将 css 样式转浏览器能够理解的 stylesheets")]),v._v(" "),l("li",[v._v("样式属性值标准化，即 2em 被解析成了 32px，red 被解析成了 rgb(255,0,0)，bold 被解析成了 700")]),v._v(" "),l("li",[v._v("计算 DOM 树中每个节点的具体样式")])])]),v._v(" "),l("li",[v._v("输出： stylesheets")])])]),v._v(" "),l("li",[v._v("布局阶段\n"),l("ul",[l("li",[v._v("输入：DOM 树、stylesheets")]),v._v(" "),l("li",[v._v("过程：\n"),l("ul",[l("li",[v._v("创建布局树\n"),l("ul",[l("li",[v._v("遍历 DOM 树节点，去除不显示的节点")])])]),v._v(" "),l("li",[v._v("布局计算\n"),l("ul",[l("li",[v._v("计算节点位置信息")]),v._v(" "),l("li",[v._v("保存到节点树上")])])])])]),v._v(" "),l("li",[v._v("输出：layoutTree 即有布局信息的 DOM 树")])])]),v._v(" "),l("li",[v._v("分层\n"),l("ul",[l("li",[v._v("基于布局树、浏览器需求页面复杂效果、如 3D 转换、Z 轴排序等、浏览器需要为特定的节点生成专用图层")]),v._v(" "),l("li",[v._v("输入: 布局树")]),v._v(" "),l("li",[v._v("过程：\n"),l("ul",[l("li",[v._v("对特殊区域进行分层\n"),l("ul",[l("li",[v._v("分层的标准\n"),l("ul",[l("li",[v._v("拥有层叠上下文")]),v._v(" "),l("li",[v._v("发生内容裁减")])])])])])])]),v._v(" "),l("li",[v._v("输出:图层树")])])]),v._v(" "),l("li",[v._v("绘制\n"),l("ul",[l("li",[v._v("输入：图层树")]),v._v(" "),l("li",[v._v("过程：\n"),l("ul",[l("li",[v._v("把图层的绘制拆分成很多小的指令\n"),l("ul",[l("li",[v._v("绘制顺序、绘制指令")])])])])]),v._v(" "),l("li",[v._v("输出:\n"),l("ul",[l("li",[v._v("待绘制列表")])])])])]),v._v(" "),l("li",[v._v("栅格化\n"),l("ul",[l("li",[v._v("输入：待绘制指令")]),v._v(" "),l("li",[v._v("过程：\n"),l("ul",[l("li",[v._v("主线程将绘制列表提交给合成线程")]),v._v(" "),l("li",[v._v("合成线程根据视口，就图层分块")]),v._v(" "),l("li",[v._v("合成线按视口附近的图块来优先生成位图")]),v._v(" "),l("li",[v._v("实际执行转化位图是由栅格化的来执行的\n"),l("ul",[l("li",[v._v("栅格化即将图块绘制指令转为位图")]),v._v(" "),l("li",[v._v("渲染进程维护了一个栅格化线程池负责位图转换")]),v._v(" "),l("li",[v._v("输入：图块")]),v._v(" "),l("li",[v._v("过程：\n"),l("ul",[l("li",[v._v("合成线程分块之后，将图提交给栅格化线程池")]),v._v(" "),l("li",[v._v("栅格化线程池启用跨进程通信将图块交由 GPU 进程处理")]),v._v(" "),l("li",[v._v("GPU 处理完生成位图，保留再 GPU 中")])])])])]),v._v(" "),l("li",[v._v("输出：位图信息保留在 GPU 中")])])]),v._v(" "),l("li",[v._v("输出：栅格化完成通知合成线程")])])]),v._v(" "),l("li",[v._v("合成显示\n"),l("ul",[l("li",[v._v("输入：栅格化完成指令")]),v._v(" "),l("li",[v._v("过程：\n"),l("ul",[l("li",[v._v("合成线程生成绘制指令‘DrawQuad’给浏览器进程")]),v._v(" "),l("li",[v._v("浏览器进程中的 viz 的组件将页面内容绘制到内存中，最后显示到显示器上")])])]),v._v(" "),l("li",[v._v("输出：\n"),l("ul",[l("li",[v._v("将位图转化为页面输出到显示器上")])])])])])])]),v._v(" "),l("li",[v._v("渲染流程\n"),l("ul",[l("li",[v._v("渲染进程将 HTML 内容转换为能够读懂的 DOM 树结构。")]),v._v(" "),l("li",[v._v("渲染引擎将 CSS 样式表转化为浏览器可以理解的 styleSheets，计算出 DOM 节点的样式。")]),v._v(" "),l("li",[v._v("创建布局树，并计算元素的布局信息。对布局树进行分层，并生成分层树。")]),v._v(" "),l("li",[v._v("为每个图层生成绘制列表，并将其提交到合成线程。")]),v._v(" "),l("li",[v._v("合成线程将图层分成图块，并在光栅化线程池中将图块转换成位图。")]),v._v(" "),l("li",[v._v("合成线程发送绘制图块命令 DrawQuad 给浏览器进程。")]),v._v(" "),l("li",[v._v("浏览器进程根据 DrawQuad 消息生成页面，并显示到显示器上。")])])]),v._v(" "),l("li",[v._v("“重排”“重绘”和“合成”\n"),l("ul",[l("li",[v._v("重排需要更新完整的渲染流水线，所以开销也是最大的")]),v._v(" "),l("li",[v._v("重绘省去了布局和分层阶段，所以执行效率会比重排操作要高一些")]),v._v(" "),l("li",[v._v("相对于重绘和重排，合成能大大提升绘制效率\n"),l("ul",[l("li",[v._v("CSS 的 transform 来实现动画效果，这可以避开重排和重绘阶段，直接在非主线程上执行合成动画操作")]),v._v(" "),l("li",[v._v("will-change: transform 做优化")])])])])])])])}),[],!1,null,null,null);_.default=n.exports}}]);