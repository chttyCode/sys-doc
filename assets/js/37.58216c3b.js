(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{395:function(t,a,n){"use strict";n.r(a);var e=n(44),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"页面"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#页面"}},[t._v("#")]),t._v(" 页面")]),t._v(" "),n("h3",{attrs:{id:"chrome-的网络面板"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#chrome-的网络面板"}},[t._v("#")]),t._v(" chrome 的网络面板")]),t._v(" "),n("p",[t._v("页面开发的核心利器-chrome 开发者工具，工具有众多的功能面板 Elements(页面结构)、Console(JS shell)、Sources(file 资源)、NetWork(网络)、Performance(性能)、Memory(内存堆栈)、Application(缓存数据)、Security(安全)、Audits(性能诊断) 和 Layers(页面分层)。")]),t._v(" "),n("p",[t._v("NetWork(网络)")]),t._v(" "),n("p",[t._v("控制")]),t._v(" "),n("p",[t._v("过滤")]),t._v(" "),n("p",[t._v("抓图")]),t._v(" "),n("p",[t._v("时间线")]),t._v(" "),n("p",[t._v("详情列表")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("size:可以切换升将序排列，内容大小会展示实际传输、源文件大小\n\n单个资源加载指标\n\nQueuing\n\n  网络进程发起请求时，会有很多原因的导致不能立即执行，即需要排队等待\n  原因分析：\n    资源优先级：核心文件css、html、js优先级高于图片、音频\n    http1.1对同一个域名的链接不能超过6个\n    网络进程为数据分配磁盘空间\n\n  优化:\n     域名分片\n     升级到http2\n\nStalled\n\n   表示停滞，即在排队结束，到发起链接的间隔时间\n\nInitial connection/SSL\n\n  建立TCP链接时间、https协商加密时间\n\nRequest sent\n\n  建立好链接之后发送缓存中的请求数据\n\nTTFB\n\n  等待接收服务器第一个字节数据的时间\n\n  原因:\n    动态页面可能跟生成页面所需的数据有关\n    网络原因，使用了低带宽的服务器\n    请求头带了多余信息\n\n  优化:\n    提升服务器渲染能力、增加缓存\n    采用CDN缓存静态文件\n    减少cookie体大小\n\nContent Download\n\n  接收到全部响应数据所用的时间\n")])])]),n("p",[t._v("下载信息")]),t._v(" "),n("h3",{attrs:{id:"dom-树"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dom-树"}},[t._v("#")]),t._v(" DOM 树")]),t._v(" "),n("p",[t._v("DOM 是由渲染引擎内的 HTML 解析器对文档流解析生成的一种数据结构，")]),t._v(" "),n("p",[t._v("作用有三:1、提供生成页面基础数据 2、提供 JS 操作的接口 3、拒绝不安全的操作，提供安全防护")]),t._v(" "),n("p",[t._v("DOM 的生成过程是流式的解析而不是等待整个文档 down load 才开始解析的")]),t._v(" "),n("p",[t._v("DOM 的生成会受 JS 的影响，HTML 解析器遇到 JS 会中断解析，等待 JS 下载解析执行，而 JS 在解析之前不知道是否操作了 CSSOM，所以 JS 引擎都会等待 CSS 文件的下载执行完成才开始解析 JS")]),t._v(" "),n("p",[t._v("渲染引擎有一个 XSSAuditor 模块用于检测词法安全，用于检测是否引用了外部脚本，是否符合 CSP 规范，是否存在跨站点请求等，如果出现不符合规范的内容，XSSAuditor 会对该脚本或者下载任务进行拦截")]),t._v(" "),n("p",[t._v("优化:")]),t._v(" "),n("p",[t._v("使用 CDN 来加速 JavaScript 文件的加载\n压缩 JavaScript 文件的体积\n如果 JavaScript 文件中没有操作 DOM 相关代码，就可以将该 JavaScript 脚本设置为异步加载，通过 async 或 defer 来标记代码")]),t._v(" "),n("h3",{attrs:{id:"渲染流水线"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#渲染流水线"}},[t._v("#")]),t._v(" 渲染流水线")]),t._v(" "),n("h3",{attrs:{id:"分层合成"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分层合成"}},[t._v("#")]),t._v(" 分层合成")]),t._v(" "),n("h3",{attrs:{id:"页面性能"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#页面性能"}},[t._v("#")]),t._v(" 页面性能")]),t._v(" "),n("h3",{attrs:{id:"虚拟-dom"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#虚拟-dom"}},[t._v("#")]),t._v(" 虚拟 DOM")]),t._v(" "),n("h3",{attrs:{id:"渐进式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#渐进式"}},[t._v("#")]),t._v(" 渐进式")]),t._v(" "),n("h3",{attrs:{id:"webcomponent"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webcomponent"}},[t._v("#")]),t._v(" webComponent")])])}),[],!1,null,null,null);a.default=r.exports}}]);